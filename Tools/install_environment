##### Open-Source PDK on ngspice+xschem+gaw+klayout+magic on Ubuntu 22

##### By: Gabriel Maranhao - LCI-UFSC (last edit: 17/20/2023)
##### TO-DO: Improve SKY for Klayout

-> xscheme - A schematic capture tool
-> ngspice - A circuit simulator
-> gaw - A waveform viewer to view the simulation results (OPTIONAL)
-> Klayout - Layout editor/viewer
-> Magic - Layout editor/viewer/pex
-> GlobalFoundries 180nm Open-Source PDK
-> SkyWater 130nm Open-Source PDK
-> netgen - LVS tool for Sky130nm

#Important pakages
---------------------------

sudo apt-get install -y libtool autoconf automake autoconf libxaw7-dev libreadline8 libreadline-dev bison byacc flex tcl tk tcl-dev tk-dev python3 python3-pip xz-utils libgtk-3-dev xcb

sudo apt install xterm graphicsmagick ghostscript

#---- Klayout pakages for Ubuntu 22 (search your OS here: https://www.klayout.de/build.html)

sudo apt-get install gcc g++ make qtbase5-dev qttools5-dev libqt5xmlpatterns5-dev qtmultimedia5-dev libqt5multimediawidgets5 libqt5svg5-dev ruby ruby-dev python3-dev libz-dev

#------
----------------------------


0) Install git
	- 0.1) $ sudo apt install git

1) Install Xschem (More information on: https://github.com/bluecmd/learn-sky130/blob/main/schematic/xschem/getting-started.md#setting-up-the-simulation-configuration)
	      $ # GraphicsMagick is needed for PNG export, ghostscript for pdf
	      $ git clone https://github.com/StefanSchippers/xschem.git
	      $ cd xschem
	      $ ./configure
              $ make -j$(nproc)
              $ sudo make install
              
              
2) Install ngspice-40 on /opt (Download "ngspice-40.tar.gz" at https://sourceforge.net/projects/ngspice/files/ng-spice-rework/40/ )
	      	- 2.1) copy "ngspice-40.tar.gz" to \opt and follow instructions:
	      $ sudo tar -xf ngspice-40.tar.gz
	      $ cd ngspice-40/
	      $ sudo ./configure --with-x --disable-debug --enable-cider --with-readline=yes --enable-openmp --enable-osdi
	      $ sudo ./autogen.sh
	      $ sudo make
	      $ sudo make install
	       
	       
3) (OPTIONAL) Install gaw (more information: https://github.com/bluecmd/learn-sky130/blob/main/schematic/xschem/getting-started.md#setting-up-the-simulation-configuration)
	      $ wget http://download.tuxfamily.org/gaw/download/gaw3-20200922.tar.gz
	      $ tar -xf gaw3-20200922.tar.gz
              $ cd gaw3-20200922
	      $ ./configure
	      $ make -j$(nproc)
	      $ sudo make install

4) Tutorial for GF180MCU (until 11:00): https://www.youtube.com/watch?v=USCmZuREMTE
	      $ sudo gedit ~/.bashrc
	      	- Add follow lines:
			export PDK_ROOT=/home/$USER/pdk
			export PDK=gf180mcuC
		- Save, exit
	      $ source ~/.bashrc
	      	- About Volare see: https://github.com/efabless/volare
	      $ python3 -m pip install --upgrade --no-cache-dir volare
	      $ export PATH="/home/<USR_NAME>/.local/bin:$PATH"
	      $ volare ls-remote --pdk gf180mcu
	      $ volare enable --pdk gf180mcu <INSERT-HERE-THE-LAST-VERSION>
	      $ volare ls --pdk gf180mcu
	      	- Make a directory to test tools:
	      $ mkdir gf180_work
	      $ cd gf180_work
	      $ ln -s $PDK_ROOT/$PDK/libs.tech/xschem/xschemrc
	      $ xschem
	      	- Close xschem and the warning window
	      	- See video at 8:05 -> https://youtu.be/USCmZuREMTE?t=485
	      $ gedit $PDK_ROOT/$PDK/libs.tech/xschem/xschemrc
	      	- Go to line 33, substitute it by:
	      	  append XSCHEM_LIBRARY_PATH :$env(PDK_ROOT)/$env(PDK)/libs.tech/xschem
	      	- Go to line 328, substitute it by:
		  set 180MCU_MODELS $env(PDK_ROOT)/$env(PDK)/libs.tech/ngspice
	      $ cp -r $PDK_ROOT/$PDK/libs.tech/xschem/tests $PDK_ROOT/$PDK/libs.tech/xschem/gf180mcu_tests
	      $ cp -r $PDK_ROOT/$PDK/libs.tech/xschem/symbols $PDK_ROOT/$PDK/libs.tech/xschem/gf180mcu_tests/gf180mcu_fd_pr
	      	
5) Install KLayout (Download  at https://www.klayout.de/build.html)

	     $ wget https://www.klayout.org/downloads/Ubuntu-22/klayout_0.28.10-1_amd64.deb
	     $ sudo apt install gdebi
	     $ sudo gdebi ./klayout_0.28.10-1_amd64.deb
	     $ sudo gedit ~/.bashrc
	      	- Add follow lines:
			export KLAYOUT_PATH="$PDK_ROOT/gf180mcuC/libs.tech/klayout"
		- Save, exit
	     $ source ~/.bashrc
		- You need to overwrite your /gf180mcuC/libs.tech/klayout folder with the contents from the following gzip package:
		- Link to download: https://drive.google.com/file/d/1HXZFWZkhe3efBaPlNb2l3n6M-8vvCGt2/view?usp=share_link
		- unzip and overwrite everything from /gf180mcuC/libs.tech/klayout
	     $ klayout -e
	     
5.1) DRC+LVS GF180nm (Klayout)
	     $ git clone https://github.com/efabless/globalfoundries-pdk-libs-gf180mcu_fd_pv.git
	     $ cd globalfoundries-pdk-libs-gf180mcu_fd_pv
	     $ pip install -r requirements.txt
	     $ cd klayout
	     $ cd drc 
	     or 
	     $ cd lvs
	     	- Read README.md and follow instructions
	     	
	     	DRC:
	     	$ python3 run_drc.py --path=/PATH_TO_GDS/inverter.gds --variant=C --run_mode=deep --no_offgrid --run_dir=/PATH_TO_SELECTED_DIR/
	     	
	     	LVS:
	     	& python3 run_lvs.py --layout=/PATH_TO_GDS/inverter.gds --netlist=/PATH_TO_NETLIST/inverter.spice --variant=C --run_mode=deep --lvs_sub=GND --run_dir=/PATH_TO_SELECTED_DIR/

	     
6) Install Magic
	    
	     $ sudo apt install m4 tcsh csh libx11-dev tcl-dev tk-dev libcairo2-dev mesa-common-dev libglu1-mesa-dev libncurses-dev
	     $ git clone https://github.com/RTimothyEdwards/magic
	     $ ./configure
	     $ make -j$(nproc)
	     $ sudo make install
	     $ cd /usr/local/lib/magic/sys
	     $ sudo ln -s $PDK_ROOT/$PDK/libs.tech/magic/* ./    (Change PDK_ROOT for Sky or GF)
	     $ magic -rcfile $PDK_ROOT/$PDK/libs.tech/magic/sky130A.magicrc
	     or
	     $ magic -rcfile $PDK_ROOT/$PDK/libs.tech/magic/gf180mcuC.magicrc
	     .
	     .s
	  
6.1) PEX (Magic, Sky103 of GF180)
	     - Run [run.sh] script with top cell name as argument, for example (inverter.gds):
	     $ ./run_ex.sh inverter
	     - The result file is the one that end with [.spice], for example inverter.spice
	     	
	     	
	     	
7) Sky Water (Need to Install volare on item 4)
	 $ sudo gedit ~/.bashrc
	   - Add follow lines:
		export PDK_ROOT=/home/$USER/pdk
		export PDK=sky130A
           - Save, exit
	 $ source ~/.bashrc
	 $ volare ls-remote --pdk sky130A
	 $ volare enable --pdk sky130A <INSERT-HERE-THE-LAST-VERSION>
	 $ volare ls --pdk sky130A
	   - Make a directory to test tools:
	 $ mkdir sky130_work
	 $ cd sky130_work
	 $ ln -s $PDK_ROOT/$PDK/libs.tech/xschem/xschemrc
	 $ xschem

7.1) netgen (LVS SkyWater)
	$ git clone https://github.com/RTimothyEdwards/netgen
	$ ./configure
	$ make
	$ sudo make install
	Preparing LVS:
           - Take netlist (.spice) from schematic (xschem) on Simmulation->LVS netlist:Top level is a .subckt -> hit 'N' to save .spice file on home/.xschem/simulations
	   - Create netlist (.spice) from layout using script "create_lvs_netlist.sh" 
	   - To run LVS:
	$ netgen -batch lvs "circuit_sch.spice subcircuit" "circuit_layout.spice" $PDK_ROOT/$PDK/libs.tech/netgen/sky130A_setup.tcl

EXTRAS:
#Important line for "GAW" configuration (OPTIONAL)
----------------------------
- Got to Menu"Simulations"-> "Configure Simulators and Tools"
- on "spice"(Ngspice) insert this:

	$terminal -e 'set -o pipefail; (ngspice -b -r "$n.raw" "$N" | tee "$n.out") || (echo -e "\n** ngspice exited with error code $? **\nPress enter to close"; read)'
	

- Save Configuration to File - Accept and Close

- Keep "Fg" checked and "Status" unchecked

#New USER's on same PC-Ubuntu
---------------------------
- Fix ".bashrc"
- Fix "xschemrc" file for GF180 on setup.pdk
- Install Volare, get all PDK's (GF and SKY)
- Klayout fix, Google drive link
- Do all steps of 5.1 for DRC and LVS
